pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/a-efstathiou/DevSecOps-pipeline-vulnado.git'
            }
        }
       stage('Build') {
            steps {
                echo "Building....."
            }
        }

        stage('Scan') {
            steps {
                script {
                 echo "The current branch is: ${env.GIT_BRANCH}"
                    def sonarProjectKey = "my-project-${env.BRANCH_NAME}"  // Ορισμός δυναμικού projectKey ανάλογα με το branch
                    withSonarQubeEnv('sonarQube1') {
                        sh './mvnw clean compile'   // Compile the code first
                        sh "./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar -Dsonar.projectKey=${sonarProjectKey} -Dsonar.java.binaries=target/classes" // Run the SonarQube scan
                    }
                }
            }
        }



        stage("Test") {
            steps {
                echo "Testing"
            }
        }
        stage("Deliver") {
            steps {
                echo "Deliver"
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            // Perform cleanup or archive reports
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}