pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/a-efstathiou/DevSecOps-pipeline-vulnado.git'
            }
        }
       stage('Build') {
            steps {
                echo "Building....."
            }
        }

        stage('Scan') {
            steps {
                script {
                    if (env.BRANCH_NAME == 'code-checking') {
                        withSonarQubeEnv('sonarQube1') { // Replace with your SonarQube installation name
                            sh './mvnw clean compile'   // Compile the code first
                            sh './mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar -Dsonar.java.binaries=target/classes' // Run the SonarQube scan
                        }
                    } else {
                        echo "Skipping SonarQube scan as this is not the 'code-checking' branch."
                    }
                }
            }
        }


        stage("Test") {
            steps {
                echo "Testing"
            }
        }
        stage("Deliver") {
            steps {
                echo "Deliver"
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            // Perform cleanup or archive reports
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}