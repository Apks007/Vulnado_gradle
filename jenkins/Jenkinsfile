pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/a-efstathiou/DevSecOps-pipeline-vulnado.git'
            }
        }
        stage('Install Semgrep') {
                    steps {
                        sh 'docker pull returntocorp/semgrep'
                    }
                }
                stage('Run Semgrep on changed files') {
                            steps {
                                echo "Running Semgrep Static Analysis on changed files"

                                script {
                                    // Λαμβάνουμε τα τροποποιημένα αρχεία από το τελευταίο commit
                                    def changedFiles = sh(script: "git diff --name-only HEAD~1 HEAD", returnStdout: true).trim()

                                    if (changedFiles) {
                                        echo "Files changed in the last commit: ${changedFiles}"

                                        // Εκτέλεση Semgrep μόνο στα αλλαγμένα αρχεία
                                        sh """
                                            docker run --rm -v ${WORKSPACE}:/src returntocorp/semgrep semgrep --config p/ci --error ${changedFiles}
                                        """
                                    } else {
                                        echo "No files changed in the last commit."
                                    }
                                }
                            }
                        }
        stage('Build') {
            steps {
                echo "Building"
            }
        }
        stage("Test") {
            steps {
                echo "Testing"
            }
        }
        stage("Deliver") {
            steps {
                echo "Deliver"
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            // Perform cleanup or archive reports
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}
