pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/a-efstathiou/DevSecOps-pipeline-vulnado.git'
            }
        }
         stage('Checkout2') {
                    steps {
                        checkout scm
                    }
                }
       stage('Build') {
            steps {
                echo "Building....."
            }
        }

        stage(' Sonar Cube Scan') {
             steps {
                            withSonarQubeEnv(installationName: 'sonarQube1') {
                                sh './mvnw clean compile'   // Compile the code first
                                sh './mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar -Dsonar.java.binaries=target/classes' // Run the SonarQube scan
                            }
                        }
        }

        stage('Build Docker Image ') {
                    steps {
                         sh 'docker --version'
                    }
                }

            stage('Run Nmap - Vuln Scan') {
                        steps {
                            script {
                                sh """
                                docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v ${PWD}:/usr/src/myapp -w /usr/src/myapp nikolaskir2000/nmap_image_3:latest -sV --script vuln default

                                """
                            }
                        }
                    }




        stage("Test") {
            steps {
                echo "Testing"
            }
        }
        stage("Deliver") {
            steps {
                echo "Deliver"
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            // Perform cleanup or archive reports
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}